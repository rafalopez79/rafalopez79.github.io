{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-collection/app-collection.component.ts","webpack:///src/app/app-collection/app-collection.component.html","webpack:///src/app/app-modal/app-modal.component.ts","webpack:///src/app/app-modal/app-modal.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/jumbotron/jumbotron.component.ts","webpack:///src/app/jumbotron/jumbotron.component.html","webpack:///src/app/model/model.ts","webpack:///src/app/services/data.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppCollectionComponent","dataService","modalService","columns","loadAppItems","subscribe","data","info","items","getApplications","console","log","split","item","modalRef","open","scrollable","componentInstance","setValue","array","size","map","i","slice","filter","selector","templateUrl","styleUrls","AppModalComponent","activeModal","content","close","AppComponent","title","AppModule","declarations","imports","providers","bootstrap","entryComponents","JumbotronComponent","AppVersionDetail","o","Object","assign","description","rating","AppVersion","name","releaseDate","Date","details","Array","from","forEach","element","push","AppItem","icon","url","urlPrevious","versions","input","AppInfo","applications","DataService","httpClient","get","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AppItem, AppVersion, AppVersionDetail, AppInfo } from '../model/model';\nimport { DataService } from '../services/data.service';\nimport { AppModalComponent } from '../app-modal/app-modal.component';\n\n@Component({\n  selector: 'app-collection',\n  templateUrl: './app-collection.component.html',\n  styleUrls: ['./app-collection.component.css']\n})\nexport class AppCollectionComponent implements OnInit {\n\n  private columns: number = 2;\n  private modalService: NgbModal;\n  private dataService: DataService;\n  private items: AppItem[];\n\n  constructor(dataService: DataService, modalService: NgbModal) {\n    this.dataService = dataService;\n    this.modalService = modalService;\n  }\n\n  ngOnInit(): void {\n    this.dataService.loadAppItems().subscribe(\n      data =>  {\n        let info = new AppInfo(data);\n        this.items = info.getApplications();\n        console.log(this.items);\n      }\n    );\n  }\n\n  public getItems(): AppItem[][] {\n    return AppCollectionComponent.split(this.items, this.columns);\n  }\n\n  public open(item: AppItem): void {\n    const modalRef = this.modalService.open(AppModalComponent, { scrollable: true });\n    modalRef.componentInstance.setValue(item);\n  }\n\n  private static split<T>(array: T[], size: number): T[][] {\n    if (array) {\n      return array.map((e, i) => i % size == 0 ? array.slice(i, i + size) : null).filter(function (e) { return e; });\n    } else {\n      return [];\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"card-deck mt-4\" *ngFor=\"let itemRow of getItems(); index as i\">\n        <div class=\"card \" style=\"min-width: 18rem;\" *ngFor=\"let item of itemRow\">\n            <div class=\"card-header\">\n                <h4 class=\"card-title text-center\">{{item.name}}</h4>\n            </div>\n            <div class=\"card-body\">\n                <div class=\"row no-gutters\">\n                    <div class=\"col-md-4\">\n                        <img class=\"card-img-left\" src=\"{{item.icon}}\" alt=\"Card image\">\n                    </div>\n                    <div class=\"col-md-8\">\n                        <p class=\"card-text\">{{item.description}}</p>\n                    </div>\n                </div>\n            </div>\n            <div class=\"card-footer\">\n                <div class=\"btn-toolbar\">\n                    <a class=\"btn btn-primary mr-1\" d href=\"#\">Start &raquo;</a>\n                    <a class=\"btn btn-secondary mr-1\" d href=\"#\">Start previous &raquo;</a>\n                    <a class=\"btn btn-info\" (click)=\"open(item)\">More info &raquo;</a>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>  ","import { Component, OnInit, Input } from '@angular/core';\nimport { NgbModal, NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { AppItem } from '../model/model';\n\n@Component({\n  selector: 'app-modal',\n  templateUrl: './app-modal.component.html',\n  styleUrls: ['./app-modal.component.css']\n})\nexport class AppModalComponent implements OnInit {\n\n  @Input()\n  public item: AppItem;\n\n  constructor(private modalService: NgbModal, private activeModal: NgbActiveModal) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  public open(content): void {\n    this.modalService.open(content);\n  }\n\n  public setValue(item: AppItem) : void {\n    this.item = item;\n  }\n\n  public close(): void {\n    this.activeModal.close();\n  }\n\n}\n","<div class=\"modal-header\">\n    <h3 class=\"modal-title\">{{item.getName()}}</h3>\n    <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"close()\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n</div>\n<div class=\"modal-body\">\n    <div class=\"container\">\n        <ngb-accordion #acc=\"ngbAccordion\" [closeOthers]=\"true\">\n            <ngb-panel *ngFor=\"let version of item.getVersions(); index as i\" id=\"toggle-{{i}}\" title=\"Version {{version.getName()}}\">\n                \n                <ng-template ngbPanelContent>\n                    <div class=\"list-group\" *ngFor=\"let detail of version.getDetails()\">\n                        <a href=\"#\" class=\"list-group-item list-group-item-action flex-column align-items-start\">\n                            <div class=\"d-flex w-100 justify-content-between\">\n                                <h5 class=\"mb-1\">{{detail.getTitle()}}</h5>\n                                <small>\n                                    <ng-template #t let-fill=\"fill\">\n                                        <span class=\"star\" [class.full]=\"fill === 100\">\n                                          <span class=\"half\" [style.width.%]=\"fill\">&hearts;</span>&hearts;\n                                        </span>\n                                    </ng-template>\n                                    <ngb-rating [(rate)]=\"detail.rating\" [starTemplate]=\"t\" [readonly]=\"true\" [max]=\"5\"></ngb-rating>  \n                                </small>\n                            </div>\n                            <p class=\"mb-1\">{{detail.getDescription()}}</p>\n                        </a>\n                    </div>\n                </ng-template>\n            </ngb-panel>\n        </ngb-accordion>\n    </div>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"close()\">Close</button>\n</div>\n","import { Component } from '@angular/core';\nimport { DataService } from './services/data.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent {\n  title = 'app-catalog';\n}\n\n","<header class=\"header\">\r\n    <app-jumbotron title={{title}}></app-jumbotron>\r\n</header>\r\n\r\n<!--anyClass-->\r\n<main role=\"main\" class=\"container\">\r\n    <app-collection></app-collection>\r\n</main>\r\n\r\n<footer class=\"footer\">\r\n    <!--fixed-bottom-->\r\n    <div class=\"container\">\r\n        <hr>\r\n        <p>&copy; Company 2020</p>\r\n    </div>\r\n</footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\n\nimport { AppComponent } from './app.component';\n//TODO: pillar solo los modulos que voy a usar\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { JumbotronComponent } from './jumbotron/jumbotron.component';\nimport { AppCollectionComponent } from './app-collection/app-collection.component';\nimport { AppModalComponent } from './app-modal/app-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    JumbotronComponent,\n    AppCollectionComponent,\n    AppModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    NgbModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [AppModalComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-jumbotron',\n  templateUrl: './jumbotron.component.html',\n  styleUrls: ['./jumbotron.component.css']\n})\nexport class JumbotronComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @Input() title: string;\n\n}\n","<div class=\"container\">\n      <div class=\"jumbotron text-center\">\n            <h1 class=\"display-4\">{{title}}</h1>\n      </div>\n</div>","//several models\r\n\r\nexport class AppVersionDetail {\r\n    private title: string;\r\n    private description: string;\r\n    private rating: number;\r\n\r\n    constructor(o : any) {\r\n       Object.assign(this, o);\r\n    }\r\n\r\n    public getTitle(): string {\r\n        return this.title;\r\n    }\r\n\r\n    public getDescription(): string {\r\n        return this.description;\r\n    }\r\n\r\n    public getRating(): number{\r\n        return this.rating;\r\n    }\r\n}\r\n\r\n\r\nexport class AppVersion {\r\n    private name: string;\r\n    private releaseDate: Date;\r\n    private details: AppVersionDetail[];\r\n\r\n    constructor(o : any) {\r\n       this.name = o?.name;\r\n       if (o?.releaseDate){\r\n            this.releaseDate = new Date(o.releaseDate);\r\n       }\r\n       if (o?.details){\r\n            const array = Array.from(o.details);\r\n            const details : Array<AppVersionDetail> = [];\r\n            array.forEach(element => {\r\n                details.push(new AppVersionDetail(element));\r\n            });\r\n            this.details = details;\r\n       }\r\n    }\r\n\r\n    public getName(): string {\r\n        return this.name;\r\n    }\r\n\r\n    public getReleaseDate(): Date {\r\n        return this.releaseDate;\r\n    }\r\n\r\n    public getDetails(): AppVersionDetail[]{\r\n        return this.details;\r\n    }\r\n}\r\n\r\nexport class AppItem {\r\n    private name: string;\r\n    private description: string;\r\n    private icon: string;\r\n    private url: string;\r\n    private urlPrevious: string;\r\n    private versions: AppVersion[];\r\n\r\n    constructor(o : any){\r\n        this.name = o?.name;\r\n        this.description = o?.description;\r\n        if (o?.icon){\r\n            this.icon = o.icon;\r\n        }\r\n        if (o?.url){\r\n            this.url = o.url;\r\n        }\r\n        if (o?.urlPrevious){\r\n            this.urlPrevious = o.urlPrevious;\r\n        }\r\n        if (o?.versions){\r\n            const array = Array.from(o.versions);\r\n            const details : Array<AppVersion> = [];\r\n            array.forEach(element => {\r\n                details.push(new AppVersion(element));\r\n            });\r\n            this.versions = details;\r\n       }\r\n    }\r\n\r\n    public getName(): string{\r\n        return this.name;\r\n    }\r\n\r\n    public getDescription(): string{\r\n        return this.description;\r\n    }\r\n\r\n    public getIcon(): string{\r\n        return this.icon;\r\n    }\r\n\r\n    public getUrl(): string{\r\n        return this.url;\r\n    }\r\n\r\n    public getUrlPrevious(): string{\r\n        return this.urlPrevious;\r\n    }\r\n\r\n    public getVersions(): AppVersion[]{\r\n        return this.versions;\r\n    }\r\n\r\n    deserialize(input: any): AppItem {\r\n        Object.assign(this, input);\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class AppInfo{\r\n    private applications: AppItem[];\r\n\r\n    constructor(o : any) {\r\n       if (o?.applications){\r\n            const array = Array.from(o.applications);\r\n            const details : Array<AppItem> = [];\r\n            array.forEach(element => {\r\n                details.push(new AppItem(element));\r\n            });\r\n            this.applications = details;\r\n       }\r\n    }\r\n\r\n    public getApplications() : AppItem[]{\r\n        console.log(this.applications);\r\n        return this.applications;\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from \"@angular/common/http\";\nimport { AppInfo } from '../model/model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private httpClient: HttpClient;\n\n  constructor(httpClient: HttpClient) {\n    this.httpClient = httpClient;\n  }\n\n  public loadAppItems(): Observable<AppInfo> {\n    const url = 'assets/data.json';\n    return this.httpClient.get<AppInfo>(url);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}